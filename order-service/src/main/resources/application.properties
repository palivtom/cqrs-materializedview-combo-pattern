## Logger
logging.level.cz.ctu.fee.palivtom.*=DEBUG

## Database
spring.jpa.hibernate.ddl-auto=none
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

spring.flyway.enabled=true

spring.business-datasource.driver-class-name=org.postgresql.Driver
spring.view-datasource.driver-class-name=org.postgresql.Driver

# Enter to docker compose env variables
spring.business-datasource.url=
spring.business-datasource.username=
spring.business-datasource.password=

spring.view-datasource.url=
spring.view-datasource.username=
spring.view-datasource.password=

## Kafka ##
spring.kafka.bootstrap-servers=
spring.kafka.properties.group.id=
spring.kafka.properties.schema.registry.url=

spring.kafka.producer.key-serializer=io.confluent.kafka.serializers.json.KafkaJsonSchemaSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.json.KafkaJsonSchemaSerializer

spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=io.confluent.kafka.serializers.json.KafkaJsonSchemaDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.json.KafkaJsonSchemaDeserializer